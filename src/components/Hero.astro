---
import { getLangFromUrl, useTranslations } from '../i18n/utils';

// Obtener el idioma actual y las traducciones
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<section class="hero">
  <div class="container">
    <div class="hero-content" data-aos="fade-right" data-aos-delay="200">
      <div class="greeting">{t('hero.greeting')}</div>
      <h1><span class="highlight-text">{t('hero.name')}</span></h1>
      <h2 id="typewriter">{t('hero.title')}</h2>
      <p data-aos="fade-up" data-aos-delay="400">
        {t('hero.subtitle')}
      </p>
      <div class="hero-buttons" data-aos="fade-up" data-aos-delay="600">
        <a href="#proyectos" class="btn">{lang === 'es' ? 'Ver Proyectos' : 'See Projects'}</a>
        <a href="#contacto" class="btn btn-outline">{lang === 'es' ? 'Contactar' : 'Contact'}</a>
      </div>
      <div class="code-snippet" data-aos="fade-up" data-aos-delay="800">
        <pre><code>const developer = &#123;
  name: 'Ramón',
  skills: ['JavaScript', 'C#', 'Vue.js'],
  passion: {lang === 'es' ? "'Crear soluciones innovadoras'" : "'Creating innovative solutions'"},
  coffee: {lang === 'es' ? 'necesario: true' : 'required: true'}
&#125;;</code></pre>
      </div>
    </div>
    <div class="hero-image" data-aos="fade-left" data-aos-delay="400">
      <div class="image-container">
        <img
          src="/images/avatar.jpg"
          alt="Ramón - Foto de perfil"
          class="profile-image"
        />
      </div>
      <div class="floating-elements">
        <div class="floating-element html">&lt;/&gt;</div>
        <div class="floating-element css">{}</div>
        <div class="floating-element js">()</div>
        <div class="floating-element react">&#9883;</div>
        <div class="floating-element csharp">C#</div>
        <div class="floating-element vue">V</div>
      </div>
    </div>
  </div>
</section>

<script define:vars={{ lang }}>
  // Efecto de máquina de escribir
  window.addEventListener("load", function () {
    const typewriterElement = document.getElementById("typewriter");
    if (!typewriterElement) return;

    const phrases = lang === 'es' ? [
      "Desarrollador de Software",
      "Desarrollador Frontend",
      "Desarrollador Backend",
      "Desarrollador Full Stack",
      "Creador de Soluciones Digitales",
    ] : [
      "Software Developer",
      "Frontend Developer",
      "Backend Developer",
      "Full Stack Developer",
      "Digital Solutions Creator",
    ];

    let currentPhraseIndex = 0;
    let currentCharIndex = 0;
    let isDeleting = false;
    let typingSpeed = 100;

    function typeWriter() {
      if (!typewriterElement) return; // Verificar nuevamente por seguridad

      const currentPhrase = phrases[currentPhraseIndex];

      if (isDeleting) {
        typewriterElement.textContent = currentPhrase.substring(
          0,
          currentCharIndex - 1,
        );
        currentCharIndex--;
        typingSpeed = 50;
      } else {
        typewriterElement.textContent = currentPhrase.substring(
          0,
          currentCharIndex + 1,
        );
        currentCharIndex++;
        typingSpeed = 100;
      }

      if (!isDeleting && currentCharIndex === currentPhrase.length) {
        isDeleting = true;
        typingSpeed = 1500; // Pausa antes de empezar a borrar
      } else if (isDeleting && currentCharIndex === 0) {
        isDeleting = false;
        currentPhraseIndex = (currentPhraseIndex + 1) % phrases.length;
        typingSpeed = 500; // Pausa antes de escribir la siguiente frase
      }

      setTimeout(typeWriter, typingSpeed);
    }

    // Esperar un poco para asegurarse de que todo está cargado
    setTimeout(typeWriter, 1500);
  });
</script>

<style>
  .hero {
    padding: 6rem 0 3rem;
    background: linear-gradient(
      135deg,
      var(--light-background) 0%,
      var(--background-color) 100%
    );
    position: relative;
    overflow: hidden;
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .hero .container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2rem;
    align-items: center;
    position: relative;
    z-index: 2;
    width: 100%;
    max-width: 1200px;
  }

  .hero-content {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .greeting {
    font-size: 1.2rem;
    color: var(--text-color);
    margin-bottom: 0.5rem;
  }

  .hero h1 {
    font-size: 4rem;
    font-weight: 700;
    margin-bottom: 0.5rem;
    line-height: 1;
  }

  .hero h2 {
    font-size: 2rem;
    color: var(--primary-color);
    margin-bottom: 1rem;
    min-height: 2.5rem; /* Para evitar saltos durante la animación de escritura */
  }

  .hero p {
    font-size: 1.1rem;
    color: var(--text-color);
    margin-bottom: 1.5rem;
    max-width: 500px;
    line-height: 1.7;
  }

  .hero-buttons {
    display: flex;
    gap: 1rem;
    margin-top: 0.75rem;
    margin-bottom: 1rem;
  }

  .code-snippet {
    background-color: #1f2937;
    border-radius: 8px;
    padding: 1rem;
    max-width: 400px;
    overflow: hidden;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    position: relative;
    font-size: 0.95rem;
    line-height: 1.4;
  }

  .code-snippet::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(59, 130, 246, 0.1),
      transparent
    );
    transform: translateX(-100%);
    animation: shimmer 3s infinite;
  }

  @keyframes shimmer {
    100% {
      transform: translateX(100%);
    }
  }

  .code-snippet pre {
    margin: 0;
    font-family: "Consolas", "Monaco", monospace;
    font-size: 0.9rem;
    color: #e5e7eb;
  }

  .code-snippet code {
    display: block;
    line-height: 1.5;
  }

  .hero-image {
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
  }

  .image-container {
    position: relative;
    width: 300px;
    height: 300px;
    border-radius: 50%;
    overflow: hidden;
    box-shadow: 0 15px 35px rgba(59, 130, 246, 0.2);
    background-color: var(--light-background);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1;
    animation: float 6s ease-in-out infinite;
    border: 4px solid var(--card-background);
    transition:
      box-shadow 0.5s ease,
      transform 0.5s ease;
  }

  .image-container:hover {
    box-shadow: 0 20px 40px rgba(59, 130, 246, 0.3);
  }

  @keyframes float {
    0%,
    100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-20px);
    }
  }

  .profile-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
    border-radius: 50%;
    transition: transform 0.5s ease;
  }

  .image-container:hover .profile-image {
    transform: scale(1.05);
  }

  .floating-elements {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 0;
  }

  .floating-element {
    position: absolute;
    font-size: 1.5rem;
    font-weight: bold;
    padding: 0.5rem;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    animation-duration: 6s;
    animation-iteration-count: infinite;
    animation-timing-function: ease-in-out;
  }

  .html {
    background-color: #e34c26;
    color: white;
    top: 20%;
    left: 0%;
    animation-name: float-1;
  }

  .css {
    background-color: #264de4;
    color: white;
    top: 70%;
    left: 10%;
    animation-name: float-2;
  }

  .js {
    background-color: #f7df1e;
    color: black;
    top: 40%;
    right: 10%;
    animation-name: float-3;
  }

  .react {
    background-color: #61dafb;
    color: black;
    top: 10%;
    right: 0%;
    animation-name: float-4;
  }

  .csharp {
    background-color: #6a1577;
    color: white;
    bottom: 15%;
    right: 15%;
    animation-name: float-5;
  }

  .vue {
    background-color: #42b883;
    color: #35495e;
    bottom: 30%;
    left: 20%;
    animation-name: float-6;
    font-weight: 900;
    font-family: 'Arial', sans-serif;
    font-style: italic;
    padding: 0.4rem 0.7rem;
  }

  @keyframes float-1 {
    0%,
    100% {
      transform: translate(0, 0);
    }
    50% {
      transform: translate(20px, 20px);
    }
  }

  @keyframes float-2 {
    0%,
    100% {
      transform: translate(0, 0);
    }
    50% {
      transform: translate(-20px, -10px);
    }
  }

  @keyframes float-3 {
    0%,
    100% {
      transform: translate(0, 0);
    }
    50% {
      transform: translate(-15px, 15px);
    }
  }

  @keyframes float-4 {
    0%,
    100% {
      transform: translate(0, 0);
    }
    50% {
      transform: translate(15px, -15px);
    }
  }

  @keyframes float-5 {
    0%,
    100% {
      transform: translate(0, 0) rotate(0deg);
    }
    50% {
      transform: translate(-10px, 10px) rotate(10deg);
    }
  }

  @keyframes float-6 {
    0%,
    100% {
      transform: translate(0, 0) scale(1);
    }
    50% {
      transform: translate(15px, -5px) scale(1.1);
    }
  }

  @media (max-width: 768px) {
    .hero {
      padding: 5rem 0 2rem;
      min-height: calc(100vh - 70px); /* Ajustar para la altura del header */
      display: flex;
      align-items: center;
    }

    .hero .container {
      grid-template-columns: 1fr;
      text-align: center;
      gap: 1rem;
    }

    .hero-content {
      order: 2;
    }

    .hero-image {
      order: 1;
      margin-bottom: 1rem;
    }

    .hero h1 {
      font-size: 2.5rem;
    }

    .hero h2 {
      font-size: 1.3rem;
      min-height: 2rem;
    }

    .hero p {
      font-size: 0.9rem;
      margin: 0 auto 1rem;
      line-height: 1.5;
    }

    .hero-buttons {
      justify-content: center;
      margin-top: 0.5rem;
      margin-bottom: 1rem;
    }

    .code-snippet {
      margin: 0 auto;
      font-size: 0.8rem;
      padding: 0.75rem;
      max-width: 300px;
    }

    .code-snippet pre {
      font-size: 0.8rem;
    }

    .image-container {
      width: 180px;
      height: 180px;
      border-width: 3px;
      margin: 0 auto;
    }

    .floating-element {
      font-size: 1.2rem;
      padding: 0.4rem;
    }
  }

  @media (max-width: 480px) {
    .hero {
      padding: 3rem 0 1rem;
      min-height: 100vh;
      justify-content: center;
    }

    .hero .container {
      gap: 0.5rem;
      width: 100%;
      padding: 0 1rem;
    }

    .hero h1 {
      font-size: 1.8rem;
      margin-bottom: 0.2rem;
    }

    .hero h2 {
      font-size: 1rem;
      min-height: 1.5rem;
      margin-bottom: 0.5rem;
    }

    .hero p {
      font-size: 0.8rem;
      margin-bottom: 0.5rem;
      line-height: 1.4;
    }

    .image-container {
      width: 120px;
      height: 120px;
      border-width: 2px;
    }

    .code-snippet {
      max-width: 100%;
      padding: 0.5rem;
      margin-top: 0.5rem;
      font-size: 0.7rem;
    }

    .code-snippet pre {
      font-size: 0.65rem;
    }

    .hero-buttons {
      flex-direction: column;
      gap: 0.5rem;
      align-items: center;
      margin-top: 0.5rem;
      margin-bottom: 0.5rem;
    }

    .hero-buttons .btn {
      width: 100%;
      padding: 0.5rem 0.8rem;
      font-size: 0.8rem;
    }

    .floating-elements {
      /* Mantener los elementos flotantes pero hacerlos más pequeños */
      transform: scale(0.7);
    }

    .floating-element {
      font-size: 1rem;
      padding: 0.3rem;
    }

    .greeting {
      font-size: 1rem;
      margin-bottom: 0.2rem;
    }
  }

  /* Ajustes específicos para dispositivos muy pequeños */
  @media (max-width: 360px) {
    .hero {
      padding: 2rem 0 0.5rem;
    }

    .hero h1 {
      font-size: 1.6rem;
    }

    .hero h2 {
      font-size: 0.9rem;
    }

    .hero p {
      font-size: 0.75rem;
    }

    .image-container {
      width: 100px;
      height: 100px;
    }

    .code-snippet {
      display: none; /* Ocultar el código en pantallas extremadamente pequeñas */
    }

    .floating-elements {
      transform: scale(0.6);
    }

    .floating-element {
      font-size: 0.9rem;
      padding: 0.25rem;
    }
  }
</style>
